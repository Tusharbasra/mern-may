function add(){
console.log("Add ", arguments.length);
}
undefined
add(10,20);
VM254:2 Add  2
undefined
function add(...arg){
console.log(arg);
}
undefined
add(10,20,30);
VM402:2 (3) [10, 20, 30]
undefined
var arr = [10,20,30,40];
undefined
int arr2 = [100,200,300];
VM754:1 Uncaught SyntaxError: Unexpected identifier
var arr2 = [100,200,300];
undefined
var arr3 = [arr, arr2];
undefined
arr3;
(2) [Array(4), Array(3)]
arr3[0][1]
20
var arr3=[...arr, ...arr2];
undefined
arr3;
(7) [10, 20, 30, 40, 100, 200, 300]
arr;
(4) [10, 20, 30, 40]
arr3[0] = 10000;
10000
arr3;
(7) [10000, 20, 30, 40, 100, 200, 300]
arr;
(4) [10, 20, 30, 40]
var obj = {id:1001 , name:'Amit'};
undefined
var obj2 = obj;
undefined
obj2;
{id: 1001, name: "Amit"}
obj;
{id: 1001, name: "Amit"}
obj.id = 1000;
1000
obj2;
{id: 1000, name: "Amit"}
var obj3 = {...obj};
undefined
obj3;
{id: 1000, name: "Amit"}
obj3.id = 9999;
9999
obj;
{id: 1000, name: "Amit"}
obj;'
VM2016:1 Uncaught SyntaxError: Invalid or unexpected token
obj;
{id: 1000, name: "Amit"}
var obj2 = {id:1002, course:'JS',city:'Delhi'};
undefined
obj;
{id: 1000, name: "Amit"}
var obj3 = {...obj,...obj2};
undefined
obj3;
{id: 1002, name: "Amit", course: "JS", city: "Delhi"}
var obj4 = {address:'India',detail:obj3};
undefined
obj4;
{address: "India", detail: {…}}address: "India"detail: {id: 1002, name: "Amit", course: "JS", city: "Delhi"}__proto__: Object
var obj5 = {...obj4};
undefined
obj5;
{address: "India", detail: {…}}address: "India"detail: {id: 1002, name: "Amit", course: "JS", city: "Delhi"}__proto__: Object
obj3;
{id: 1002, name: "Amit", course: "JS", city: "Delhi"}
obj3.city="Mumbai";
"Mumbai"
obj5;
{address: "India", detail: {…}}address: "India"detail: {id: 1002, name: "Amit", course: "JS", city: "Mumbai"}__proto__: Object
typeof JSON;
"object"
JSON.stringify(obj3);
"{"id":1002,"name":"Amit","course":"JS","city":"Mumbai"}"
obj5;
{address: "India", detail: {…}}address: "India"detail: {id: 1002, name: "Amit", course: "JS", city: "Mumbai"}__proto__: Object
var obj6 = {"address":'Delhi',detail:JSON.stringify(obj3)};
undefined
obj6;
{address: "Delhi", detail: "{"id":1002,"name":"Amit","course":"JS","city":"Mumbai"}"}
var obj7 ={...obj6};
undefined
obj7;
{address: "Delhi", detail: "{"id":1002,"name":"Amit","course":"JS","city":"Mumbai"}"}
var str = JSON.stringify(obj3);
undefined
typeof str;
"string"
str;
"{"id":1002,"name":"Amit","course":"JS","city":"Mumbai"}"
str.id;
undefined
var r = JSON.parse(str);
undefined
typeof r;
"object"
r.id;
1002
10.toString();
VM4370:1 Uncaught SyntaxError: Invalid or unexpected token
var a =10;
undefined
a.toString();
"10"
var obj = {id:1001, name:'Amit'};
undefined
obj.toString()
"[object Object]"
obj instanceof Object;
true
typeof Object;
"function"
console.dir(Object);
VM4764:1 ƒ Object()arguments: (...)assign: ƒ assign()caller: (...)create: ƒ create()defineProperties: ƒ defineProperties()defineProperty: ƒ defineProperty()entries: ƒ entries()freeze: ƒ freeze()fromEntries: ƒ fromEntries()getOwnPropertyDescriptor: ƒ getOwnPropertyDescriptor()getOwnPropertyDescriptors: ƒ getOwnPropertyDescriptors()getOwnPropertyNames: ƒ getOwnPropertyNames()getOwnPropertySymbols: ƒ getOwnPropertySymbols()getPrototypeOf: ƒ getPrototypeOf()is: ƒ is()isExtensible: ƒ isExtensible()isFrozen: ƒ isFrozen()isSealed: ƒ isSealed()keys: ƒ keys()length: 1name: "Object"preventExtensions: ƒ preventExtensions()prototype: {constructor: ƒ, __defineGetter__: ƒ, __defineSetter__: ƒ, hasOwnProperty: ƒ, __lookupGetter__: ƒ, …}seal: ƒ seal()setPrototypeOf: ƒ setPrototypeOf()values: ƒ values()__proto__: ƒ ()apply: ƒ apply()arguments: (...)bind: ƒ bind()call: ƒ call()caller: (...)constructor: ƒ Function()length: 0name: ""toString: ƒ toString()arguments: (...)caller: (...)length: 0name: "toString"__proto__: ƒ ()[[Scopes]]: Scopes[0]Symbol(Symbol.hasInstance): ƒ [Symbol.hasInstance]()get arguments: ƒ ()set arguments: ƒ ()get caller: ƒ ()set caller: ƒ ()__proto__: Object[[FunctionLocation]]: <unknown>[[Scopes]]: Scopes[0][[Scopes]]: Scopes[0]
undefined
obj.toString();
"[object Object]"
obj;
{id: 1001, name: "Amit"}
class Emp{
constructor(){
this.id = 1001;
this.name = "Amit";
}
}
var amit =new Emp();
undefined
amit;
Emp {id: 1001, name: "Amit"}
console.log("Emp is "+amit);
VM5361:1 Emp is [object Object]
undefined
class Emp1{
constructor(){
this.id = 1001;
this.name = "Amit";
}
toString(){
return "id "+this.id+" Name "+this.name;
}
}
var amit =new Emp1();
undefined
console.log("Emp is "+amit);
VM5536:1 Emp is id 1001 Name Amit
undefined
class Emp2{
constructor(){
this.id = 1001;
this.name = "Amit";
}
toString(){
return JSON.stringify(this);
}
}
var amit =new Emp2();
undefined
amit.toString();
"{"id":1001,"name":"Amit"}"
class Emp3{
constructor(){
this.id = 1001;
this.name = "Amit";
}
toString(){
return this;
}
}
var amit =new Emp3();
undefined
amit.toString();
Emp3 {id: 1001, name: "Amit"}
console.log("AMit is ",amit);
VM6012:1 AMit is  Emp3 {id: 1001, name: "Amit"}
undefined
console.log("Amit is "+amit);
VM6104:1 Uncaught TypeError: Cannot convert object to primitive value
    at <anonymous>:1:23
(anonymous) @ VM6104:1
class Emp4{
constructor(){
this.id = 1001;
this.name = "Amit";
}
toString(){
return "Id is "+this.id+" NAme is "+this.name;
}
}
var amit =new Emp4();
undefined
console.log("Amit is ",amit);
VM6329:1 Amit is  Emp4 {id: 1001, name: "Amit"}
undefined
amit;
Emp4 {id: 1001, name: "Amit"}
console.log("Amit is "+amit);
VM6429:1 Amit is Id is 1001 NAme is Amit
undefined
console.log("Amit Id is ", amit.id, " Amit Name is ",amit.name);

VM6672:1 Amit Id is  1001  Amit Name is  Amit
undefined
var arr = [10,20,30];
undefined
var arr2 = [100,999,888];
undefined
var arr3 =[arr,arr2];
undefined
arr3;
(2) [Array(3), Array(3)]
var arr4 = [...arr3];
undefined
arr4;
(2) [Array(3), Array(3)]
var arr4 = [JSON.stringify({arr:arr3})];
undefined
arr4;
["{"arr":[[10,20,30],[100,999,888]]}"]
JSON.parse(arr4);
{arr: Array(2)}arr: Array(2)0: (3) [10, 20, 30]1: (3) [100, 999, 888]length: 2__proto__: Array(0)__proto__: Object
var arr3 =[...arr,...arr2];
undefined
var arr4 = [...arr3];
undefined
arr4;
(6) [10, 20, 30, 100, 999, 888]
var arr = [1,2,3,[4,5,6]]
undefined
var gg = [...arr];
undefined
gg;
(4) [1, 2, 3, Array(3)]
var arr = [1,2,3,...[4,5,6]]
undefined
arr;
(6) [1, 2, 3, 4, 5, 6]
var gg = [...arr];
undefined
gg;
(6) [1, 2, 3, 4, 5, 6]
gg;
(6) [1, 2, 3, 4, 5, 6]
gg;
(6) [1, 2, 3, 4, 5, 6]
var [x,y,z,,m] = gg;
undefined
x;
1
y;
2
z;
3
m;
5
var [a,b] = [10,20];
undefined
a
10
b
20
[a,b] = [b,a];
(2) [20, 10]
a;
20
b;
10
obj;
{id: 1001, name: "Amit"}
var t = obj.id;
undefined
var {id, name} = obj;
undefined
id;
1001
name;
"Amit"
function print(obj){
console.log(obj.id +" " + obj.name);
}
undefined
obj;
{id: 1001, name: "Amit"}
print(obj);
VM9027:2 1001 Amit
undefined
function print({name, id}){
console.log(id+" " + name);
}
undefined
print(obj);
VM9148:2 1001 Amit
undefined
